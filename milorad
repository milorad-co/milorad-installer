#!/bin/fish
if test $EUID -ne 0 && test "$argv[1]" = "install" -o "$argv[1]" = "remove" -o "$argv[1]" = "update"
    echo -e "\e[0;31mFatal: milorad cannot run as a standard user.\e[0m\nTry 'sudo milorad $argv[1] $argv[2]'."
    exit
end
set currentdir "$(pwd)"
set ans "n"
cd /opt/milorad/ || exit
if test "$argv[1]" != ""
    if test "$argv[1]" = "install"
        if test "$argv[2]" != ""
            if test "$argv[2]" = "gump-dev"
                if test -e GUMP-Development/
                    echo -e "GUMP for developers is already installed\nDid you mean 'sudo milorad update $argv[2]'?\nTry 'milorad help' for more information."
                else
                    echo "Are you sure that you wish to install GUMP for developers? [Y/n]"
                    read --prompt-str " > " ans
                    if test "$ans" = "Y" -o "$ans" = "y"
                        git clone https://github.com/milorad-co/GNU-Useless-Manipulation-Program
                        cd GNU-Useless-Manipulation-Program/ || exit
                        rm -rfv Linux/
                        rm -rfv Windows/
                        mv -v Development/ /opt/milorad/GUMP-Development/
                        cd /opt/milorad/ || exit
                        rm -rfv GNU-Useless-Manipulation-Program
                        cd /usr/local/bin/ || exit
                        touch gump-dev
                        echo -e "#!/bin/bash\nopen /opt/milorad/GUMP-Development/GUMP.yyp" > gump-dev
                        chmod -v a+x gump-dev
                        echo -e "\nThe GNU Useless Manipulation Program for developers has been installed.\nIt can be found in the directory /opt milorad/, but can also be started by entering the command 'gump-dev', asumming that you have GameMaker installed."
                        set ans "n"
                    end
                end
            end
            if test "$argv[2]" = "gump"
                if test -e GUMP/
                    echo -e "GUMP is already installed\nDid you mean 'sudo milorad update $argv[2]'?\nTry 'milorad help' for more information."
                else
                    echo "Are you sure that you wish to install GUMP? [Y/n]"
                    read --prompt-str " > " ans
                    if test "$ans" = "Y" -o "$ans" = "y"
                        git clone https://github.com/milorad-co/GNU-Useless-Manipulation-Program
                        cd GNU-Useless-Manipulation-Program/ || exit
                        rm -rfv Windows/
                        rm -rfv Development/
                        mv -v Linux/ /opt/milorad/GUMP/
                        cd /opt/milorad/ || exit
                        rm -rfv GNU-Useless-Manipulation-Program
                        cd /opt/milorad/GUMP/ || exit
                        chmod -v a+x GUMP
                        cd /usr/local/bin/ || exit
                        touch gump
                        echo -e "#!/bin/bash\n/opt/milorad/GUMP/GUMP" > gump
                        chmod -v a+x gump
                        echo -e "\nThe GNU Useless Manipulation Program has been installed.\nIt can be found in the directory /opt/milorad/, but can also be started by entering the command 'gump'."
                        set ans "n"
                    end
                end
            end
            if test "$argv[2]" != "gump" -a "$argv[2]" != "gump-dev"
                echo -e "Invalid option: '$argv[2]'.\nTry 'milorad help' for more information."
            end
        else
            echo -e "Missing operand.\nTry 'milorad help' for more information"
        end
    end
    if test "$argv[1]" = "update"
        if test "$argv[2]" != ""
            if test "$argv[2]" = "gump-dev"
                if test -e /opt/milorad/GUMP-Development/
                    rm -rfv /opt/milorad/GUMP-Development/
                    git clone https://github.com/milorad-co/GNU-Useless-Manipulation-Program
                    cd GNU-Useless-Manipulation-Program || exit
                    rm -rfv Linux/
                    rm -rfv Windows/
                    mv -v Development/ /opt/milorad/GUMP-Development/
                    cd /opt/milorad/ || exit
                    rm -rfv GNU-Useless-Manipulation-Program
                    cd /usr/local/bin/ || exit
                    touch gump-dev
                    echo -e "#!/bin/bash\nopen /opt/milorad/GUMP-Development/GUMP.yyp" > gump-dev
                    chmod -v a+x gump-dev
                    echo -e "\nThe GNU Useless Manipulation Program for developers has been updated."
                else
                    echo -e "GUMP for developers is not installed\nDo you want to install it? [Y/n]"
                    read --prompt-str " > " ans
                    if test "$ans" = "Y" -o "$ans" = "y"
                        sudo milorad install gump-dev
                    end
                end
            end
            if test "$argv[2]" = "gump"
                if test -e /opt/milorad/GUMP/
                    rm -rfv /opt/milorad/GUMP/
                    git clone https://github.com/milorad-co/GNU-Useless-Manipulation-Program
                    cd GNU-Useless-Manipulation-Program || exit
                    rm -rfv Windows/
                    rm -rfv Development/
                    mv -v Linux/ /opt/milorad/GUMP/
                    cd /opt/milorad/ || exit
                    rm -rfv GNU-Useless-Manipulation-Program
                    cd /opt/milorad/GUMP/ || exit
                    chmod -v a+x GUMP
                    cd /usr/local/bin/ || exit
                    touch gump
                    echo -e "#!/bin/bash\n/opt/milorad/GUMP-Windows/GUMP.exe" > gump-win
                    chmod -v a+x gump
                    echo -e "\nThe GNU Useless Manipulation Program has been updated."
                else
                    echo -e "GUMP is not installed\nDo you want to install it? [Y/n]"
                    read --prompt-str " > " ans
                    if test "$ans" = "Y" -o "$ans" = "y"
                        sudo milorad install gump
                    end
                end
            end
            if test "$argv[2]" != "gump" -a $argv[2] != "gump-dev"
                echo -e "Invalid option: '$argv[2]'.\nTry 'milorad help' for more information."
            end
        else
            rm -rfv "$(status -f)"
            git clone https://github.com/milorad-co/mai-setup/
            cd mai-setup/ || exit
            chmod a+x milorad-setup.sh
            ./milorad-setup.sh
            cd ..
            rm -r milorad-installer/
            /opt/milorad/mai-config/latest-versions.sh
            echo -e "\nThe Milorad Application Installer has been updated."
        end
    end
    if test "$argv[1]" = "remove"
        if test "$argv[2]" != ""
            if test "$argv[2]" = "gump"
                if test -e /opt/milorad/GUMP/
                    rm -rfv /opt/milorad/GUMP/
                    echo -e "\nGUMP has been removed."
                else
                    echo "GUMP was not installed, so not removed."
                end
            end
            if test "$argv[2]" = "gump-dev"
                if test -e /opt/milorad/GUMP-Development/
                    rm -rfv /opt/milorad/GUMP-Development/
                    echo -e "\nGUMP for development has been removed."
                else
                    echo "GUMP for development was not installed, so not removed."
                end
            end
            if test "$argv[2]" != "gump" -o "$argv[2]" != "gump-dev"
                echo "Invalid option: '$argv[2]'.\nTry 'milorad help' for more information."
            end
        end
    end
    if test "$argv[1]" = "help"
        echo "Milorad Application Installer (M.A.I.) Version 2
Usage: sudo milorad <install/remove/update> <application>
   or: milorad help

Milorad Application Installer (M.A.I.) is a commandline Milorad application manager and
provides commands for installing, removing, and updating all Milorad appliations, such
as GUMP.

Subcommands
help               display this help
install            install an application
remove             remove an installed application
update             replace an installed application (or this installer if no application
                   name is provided) with the latest version
Applications
gump               a useless art program
gump-dev           the developer prerelease of gump, for use with gamemaker"
    end
    if test "$argv[1]" != "install" -a "$argv[1]" != "update" -a "$argv[1]" != "remove" -a "$argv[1]" != "help"
        echo -e "Invalid option: '$argv[1]'.\nTry 'milorad help' for more information."
    end
else
    echo -e "Missing operand.\nTry 'milorad help' for more information."
end
cd "$currentdir" || exit
